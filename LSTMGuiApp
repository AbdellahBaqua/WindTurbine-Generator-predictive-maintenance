import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.*;
import java.util.Arrays;

public class LSTMGuiApp {
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            new LSTMGuiApp().createAndShowGUI();
        });
    }

    private void createAndShowGUI() {
        JFrame frame = new JFrame("LSTM Prediction App");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 200);

        JTextField inputField = new JTextField("1.2, 2.3, 3.1");
        JButton predictButton = new JButton("Predict");
        JLabel resultLabel = new JLabel("Prediction will appear here");

        predictButton.addActionListener((ActionEvent e) -> {
            String inputText = inputField.getText().trim();
            try {
                String[] tokens = inputText.split(",");
                double[] sequence = Arrays.stream(tokens)
                                          .map(String::trim)
                                          .mapToDouble(Double::parseDouble)
                                          .toArray();
                String jsonInput = Arrays.toString(sequence);

                String prediction = runPythonScript(jsonInput);
                resultLabel.setText("Prediction: " + prediction);
            } catch (Exception ex) {
                resultLabel.setText("Error: " + ex.getMessage());
                ex.printStackTrace();
            }
        });

        JPanel panel = new JPanel(new GridLayout(3, 1));
        panel.add(inputField);
        panel.add(predictButton);
        panel.add(resultLabel);

        frame.getContentPane().add(panel);
        frame.setVisible(true);
    }

    private String runPythonScript(String jsonInput) throws IOException, InterruptedException {
        // Assumes python is in PATH and predict.py is in the same directory
        ProcessBuilder pb = new ProcessBuilder("python", "predict.py", jsonInput);
        pb.redirectErrorStream(true);

        Process process = pb.start();
        BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));

        StringBuilder output = new StringBuilder();
        String line;
        while ((line = reader.readLine()) != null) {
            output.append(line).append("\n");
        }

        process.waitFor();
        return output.toString().trim();
    }
}
